val traces2 = sc.textFile("file:/Users/sivakiran/masters_project/tracks/*")
traces2.map(line=>(line.split(",-")(0).split(",")(0).concat(line.split(",-")(0).split(",")(line.split(",-")(0).split(",").length-1)),line.split(",-")(1))).reduceByKey((a,b)=>a.concat(b.concat

///

// get the (source, destination) and all the list of all trips that have same source and destination

val traces3 = sc.textFile("file:/Users/sivakiran/masters_project/traces500/*")
traces3.filter(line=>line.split(",-").length==2).map(line=>(line.split(",-")(0).split(",")(0).concat("|").concat(line.split(",-")(0).split(",")(line.split(",-")(0).split(",").length-1)),line.split(",-")(1))).reduceByKey((a,b)=>a.concat("|").concat(b)).saveAsTextFile("/Users/sivakiran/masters_project/sourcedest_traces500")


// to count the number of traces after converting to sourcedestination, trace list
val sourcedest_traces = sc.textFile("file:/Users/sivakiran/masters_project/sourcedest_traces500/*").filter(line=>line.split(",")(1).split("|").size>20).count


//count the no of trajectories for one source and destination

val numberof = sc.textFile("file:/Users/sivakiran/masters_project/sdWithTrId.txt").map(line=>(line.split(",")(1)).split("\\|")).count

// get the paths for each trajectory

val stringTraj2 = "t.0.24|t.17.813|t.19.859|t.21.123|t.21.234|t.25.486|t.27.624|t.32.46|t.46.337|t.46.471|t.46.850|t.47.649|t.6.726|t.7.383|t.9.31"
var a=0
for( a<-0 to stringTraj2.split("\\|").length-1){
	val locsOfTraj = sc.textFile("file:/Users/sivakiran/masters_project/traces_unchanged_500/*").filter(line => line.split(",")(line.split(",").length-1)==stringTraj2.split("\\|")(a)).coalesce(1).saveAsTextFile("/Users/sivakiran/masters_project/sourcedest_traces500/".concat(a.toString) )
	}